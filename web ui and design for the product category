<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Shop</title>
  <style>
    body {
      font-family: Arial;
      padding: 20px;
      background: #f9f9f9;
    }
    .product {
      border: 1px solid #ccc;
      background: white;
      padding: 15px;
      margin-bottom: 10px;
      border-radius: 5px;
    }
    .product h3 {
      margin: 0;
    }
    button {
      background: magenta;
      color: white;
      padding: 8px 12px;
      border: none;
      margin-top: 10px;
      cursor: pointer;
    }
    #cart-count {
      font-weight: bold;
      float: right;
    }
  </style>
</head>
<body>
  <h1>Product List <span id="cart-count">(Cart: 0)</span></h1>
  <div id="products"></div>

  <script>
    async function fetchProducts() {
      const res = await fetch('http://127.0.0.1:5000/products');
      const products = await res.json();
      const container = document.getElementById('products');
      container.innerHTML = '';

      products.forEach(product => {
        const div = document.createElement('div');
        div.className = 'product';
        div.innerHTML = `
          <h3>${product.name}</h3>
          <p>Price: $${product.price}</p>
          <p>Stock: ${product.stock}</p>
          <button onclick="addToCart(${product.id}, '${product.name}')">Add to Cart</button>
        `;
        container.appendChild(div);
      });
    }

    function addToCart(id, name) {
      let cart = JSON.parse(localStorage.getItem('cart')) || [];
      cart.push({ id, name });
      localStorage.setItem('cart', JSON.stringify(cart));
      updateCartCount();
    }

    function updateCartCount() {
      const cart = JSON.parse(localStorage.getItem('cart')) || [];
      document.getElementById('cart-count').innerText = `(Cart: ${cart.length})`;
    }

    fetchProducts();
    updateCartCount();
  </script>
</body>
</html>


@app.route('/products', methods=['GET'])
def get_products():
    conn = sqlite3.connect('users.db')
    c = conn.cursor()
    c.execute('SELECT id, name, price, stock FROM products')
    rows = c.fetchall()
    conn.close()

    products = [
        {"id": row[0], "name": row[1], "price": row[2], "stock": row[3]}
        for row in rows
    ]
    return jsonify(products)

if __name__ == '__main__':
    app.run(debug=True)

